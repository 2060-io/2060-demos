variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  IMAGE: "gitlab.mobiera.com:4567/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
  IMAGE_TAG: "main"
stages:
   - build
   - package
   - deploy
  
before_script:
  - if [ "$CI_COMMIT_BRANCH" != "master" ]; then export IMAGE_TAG=$CI_COMMIT_BRANCH; fi
  - if [ "$CI_COMMIT_TAG" != "" ]; then export IMAGE_TAG=$CI_COMMIT_TAG; fi
 
build: 
  image: maven:3-eclipse-temurin-17
  stage: build
  variables:
     MVN_SETTINGS_DIR: /builds/current/${CI_PROJECT_NAME}/${IMAGE_TAG}
  script:
     - mkdir -p ${MVN_SETTINGS_DIR}
     - cat $MVN_SETTINGS > "${MVN_SETTINGS_DIR}/settings.xml"
     - unset MAVEN_CONFIG && ./mvnw package -s "${MVN_SETTINGS_DIR}/settings.xml"
  artifacts:
    paths:
      - /root/.m2/*
      - /builds/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/target/*

docker-package:
  image: docker:stable
  services:
     - docker:dind
  needs: [build]  
  stage: package
  tags:
     - docker
  script:
     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN gitlab.mobiera.com:4567
     - echo "Build and push ${CI_PROJECT_NAME} image..."
     - docker build -f /builds/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/src/main/docker/Dockerfile.jvm -t $IMAGE:$IMAGE_TAG .
     - docker push $IMAGE:$IMAGE_TAG
  only:
  - main
  - hotfix
  - staging
  - dev


deploy:
  stage: deploy
  image: alpine/k8s:1.25.14
  needs: [docker-package]
  variables:
     KUBE_CFG: /builds/current/${CI_PROJECT_NAME}/${IMAGE_TAG}/kube
     PROJECT: /builds/${CI_PROJECT_NAMESPACE}/
  tags:
     - docker
  script:
  
   - rm -rf $KUBE_CFG
   - mkdir -p $KUBE_CFG
   - case $CI_COMMIT_BRANCH  in    dev)     cat $KUBECONFIG_DEV > "${KUBE_CFG}/config"; echo dev;    ;;    main)     cat $KUBECONFIG_MAIN > "${KUBE_CFG}/config"; echo main;     ;;    staging)     cat $KUBECONFIG_STAGING > "${KUBE_CFG}/config"; echo staging;     ;;     hotfix)     cat $KUBECONFIG_HOTFIX > "${KUBE_CFG}/config"; echo hotfix;    ;;   *)     echo undef;     ;; esac
   - echo "Deploying ${CI_PROJECT_NAME}..."
   - kubectl --kubeconfig=${KUBE_CFG}/config apply -f /builds/${CI_PROJECT_PATH}/k8s/${CI_COMMIT_BRANCH}/namespace.yml
   - kubectl --kubeconfig=${KUBE_CFG}/config apply -f /builds/${CI_PROJECT_PATH}/k8s/${CI_COMMIT_BRANCH}/deployment.yml
   - kubectl --kubeconfig=${KUBE_CFG}/config patch -f /builds/${CI_PROJECT_PATH}/k8s/${CI_COMMIT_BRANCH}/deployment.yml -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"ci-last-updated\":\"$(date +'%s')\"}}}}}"
   - kubectl --kubeconfig=${KUBE_CFG}/config apply -f /builds/${CI_PROJECT_PATH}/k8s/${CI_COMMIT_BRANCH}/service.yml
   - kubectl --kubeconfig=${KUBE_CFG}/config apply -f /builds/${CI_PROJECT_PATH}/k8s/${CI_COMMIT_BRANCH}/ingress.yml
   - rm -f ${KUBE_CFG}/config
  only:
  - staging
  - dev


